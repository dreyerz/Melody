<Page
    x:Class="Melody.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Melody"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:Melody.Model"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" /><!-- Melody Banner and Cover Art -->
            <RowDefinition Height ="*" /><!-- Rest of the layout -->
        </Grid.RowDefinitions>

        <!--#region Melody Banner and Future Cover Art -->
        <Image Source="/Assets/Melody Image.png"
               Height="40"
               HorizontalAlignment="Left"/>
        <!--#endregion-->
        
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height ="*" /> <!-- Media Player Control -->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/><!-- PlayListMenuSidebar -->
                <ColumnDefinition Width="*"/><!-- View/Play || Create PlayList -->
            </Grid.ColumnDefinitions>
            
            <!--#region PlayListMenuSidebar-->
            <!-- PlayListCreationView and PlayListPlayBackView take up the same
            page real estate. PlayListCreationView is Visible by default,
            PlayListPlayBackView is Collapsed/hidden by default, these visible
            states are managed in MainPage event handlers -->
            <StackPanel> 
                <Button x:Name="CreateNewPlayListButton"
                        Content="Create New Playlist"
                        Click="CreateNewPlayListButton_Click"
                        Padding="5"/>
                <Button x:Name="AddNewSongButton"
                        Content="Add New Song"
                        Click="AddNewSongButton_Click"
                        Padding="5"/>
                <ListView x:Name="PlayListMenuSidebarView"
                      ItemsSource ="{x:Bind displayingPlayLists}"
                      IsItemClickEnabled="true"
                      ItemClick="PlayListMenuSidebarView_ItemClick"
                      SelectionChanged="PlayListMenuSidebarView_SelectionChanged">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="data:PlayList">
                            <StackPanel Orientation="Horizontal"
                                    Margin="5">
                                <Image Source="{x:Bind CoverFilePath}"
                                   Height="80"/>
                                <TextBlock Text="{x:Bind Name}"
                                       Padding="5"
                                       VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
            <!--#endregion-->

            <!--#region PlayListCreationView-->
            <StackPanel x:Name="PlayListCreationView"
                        Grid.Column="1"
                        Orientation="Vertical"
                        Visibility="Visible">
                <TextBlock Text="Select one or more songs for your playlist:"
                           HorizontalAlignment="Center"/>

                <!-- Recall that the Songs on a PlayList is a List<> not an
                ObservableCollection<>, thus binding the UI to it directly causes
                the UI to not respond to changes in the collection -->
                <ListView x:Name="PlayListSongSelectionEditView"
                          ItemsSource="{x:Bind displayingSongs}"
                          SelectionMode="Multiple"
                          SelectionChanged="PlayListSongSelectionEditView_SelectionChanged">
                    <!-- Bind to the List<Songs>, not the PlayList object itself -->
                    <!-- ?? Apparently can only bind to the name of an object,
                        cannot bind to an object returned by a method?
                        playLists.First() ??? -->
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="data:Song">
                            <StackPanel Orientation="Vertical"
                                        Margin="5">
                                <TextBlock Text="{x:Bind Name}"
                                           Padding="2"/>
                                <TextBlock Text="{x:Bind Artist}"
                                           Padding="2"/>
                                <TextBlock Text="{x:Bind Genre}"
                                           Padding="2"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <StackPanel Orientation="Horizontal"
                            Margin="5"
                            HorizontalAlignment="Center">
                    <TextBlock Text="Enter a name for your new playlist:" 
                               Padding="5"/>
                    <!-- TODO: Vary default playlist name to not offer a
                               default/placeholder playlist name that is
                               already in use by a current playlist
                               See also: PlayListSaveButton_Click event handler -->
                    <TextBox x:Name="PlayListName_UserInput"
                             PlaceholderText="Enter Playlist Name"
                             KeyDown="PlayListName_UserInput_KeyDown"
                             Padding="5">
                        <FlyoutBase.AttachedFlyout>
                            <!-- Setting LightDismissOverlayMode is a hack for not getting
                                 ShowMode to work. -->
                            <Flyout LightDismissOverlayMode="On">
                                <TextBlock x:Name="FlyoutText_for_PlayListName_UserInput"/>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </TextBox>
                    <Button x:Name="PlayListSaveButton"
                            Content="Save Playlist"
                            Click="PlayListSaveButton_Click"
                            Padding="5">
                        <!-- Flyout is for error state to explain to user why
                             save button is disabled if it is disabled
                             using FlyoutBase.AttachedFlyout instead of
                             Button.Flyout so we can control when the flyout
                             appears -->
                        <FlyoutBase.AttachedFlyout>
                            <!-- Setting LightDismissOverlayMode is a hack for not getting
                                 ShowMode to work. -->
                            <Flyout LightDismissOverlayMode="On">
                                <TextBlock x:Name="FlyoutText_for_PlayListSaveButton"/>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </Button>
                </StackPanel>

            </StackPanel>
            <!--#endregion-->

            <!--#region PlayListPlayBackView -->
            <!-- Appears on the right side of the page and shows the user
            the songs in the selected playlist. Collapsed/hidden by default -->
            <ListView x:Name="PlayListPlayBackView"
                        Grid.Column="1"
                        ItemsSource="{x:Bind displayingSongs}"
                        Visibility="Collapsed"
                      SelectionMode="Single"
                      Tapped="PlayListPlayBackView_Tapped">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="data:Song">
                        <StackPanel Orientation="Vertical"
                                        Margin="5">
                            <TextBlock Text="{x:Bind Name}"
                                           Padding="2"/>
                            <TextBlock Text="{x:Bind Artist}"
                                           Padding="2"/>
                            <TextBlock Text="{x:Bind Genre}"
                                           Padding="2"/>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <!--#endregion-->

            <!--#region AddNewSongView Andrea-->
            <!-- Appears on the right side of the page and shows the user
            option to import song to library. Collapsed/hidden by default -->
            <StackPanel x:Name="AddNewSongView"
                        Grid.Column="1"
                        Orientation="Vertical"
                        Visibility="Collapsed">
                <StackPanel Orientation="Vertical"
                            Margin="5"
                            HorizontalAlignment="Center">
                    
                    <!--Enter song title-->
                    <TextBlock Text="Enter song title:" 
                               Padding="5"/>
                    <TextBox x:Name="SongTitle_UserInput"
                             PlaceholderText="TITLE PLACEHOLDER TEXT"
                             Padding="5"/>
                    
                    <!--Enter song artist-->
                    <TextBlock Text="Enter artist name:" 
                               Padding="5"/>
                    <TextBox x:Name="SongArtist_UserInput"
                             PlaceholderText="ARTIST PLACEHOLDER TEXT"
                             Padding="5"/>

                    <!--Enter song genre-->
                    <TextBlock Text="Enter genre:" 
                               Padding="5"/>
                    <TextBox x:Name="Genre_UserInput"
                             PlaceholderText="GENRE PLACEHOLDER TEXT"
                             Padding="5"/>
                    

                    <!--Save button for import song-->
                    <Button x:Name="SongSaveButton"
                            Content="Add Song"
                            Click="SongSaveButton_Click"
                            Padding="5">
                    </Button>
                </StackPanel>
            </StackPanel>
            <!--#endregion-->

            <!--<MediaPlayerElement Grid.Row="1"
                                Grid.ColumnSpan="2"
                                x:Name="MediaPlayerBottomBar"
                                Source="ms-appx:///Asset/video1.mp4"
                                AutoPlay="false"
                                AreTransportControlsEnabled="true"/>-->
            
            <!-- Relative path to creative commons test file:
            \Assets\CreativeCommons\Comfort_Fit_-_03_-_Sorry.mp3 -->
            <!--#endregion-->
        </Grid>
    </Grid>
</Page>
